{"ast":null,"code":"export const required = value => value ? undefined : \"Value is required\";\nexport const minLength = value => value.length < 4 ? \"Value must be at least 4 characters\" : undefined;\nexport const maxLength = value => value.length > 10 ? \"Value is too long\" : undefined;\nexport const matchesPassword = (value, allValues) => value !== allValues.password ? \"Passwords must match\" : undefined;\nexport const asyncValidate = async values => {\n  const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n  await sleep(1000);\n\n  if ([\"daton89\", \"tony\"].includes(values.username)) {\n    return Promise.reject({\n      username: \"Username arleady taken\"\n    });\n  }\n};","map":{"version":3,"sources":["/home/paulospiguel/NewTech/projects/Admin-ReactJS/src/validation/specific.js"],"names":["required","value","undefined","minLength","length","maxLength","matchesPassword","allValues","password","asyncValidate","values","sleep","ms","Promise","resolve","setTimeout","includes","username","reject"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAGC,KAAK,IAAKA,KAAK,GAAGC,SAAH,GAAe,mBAA/C;AAEP,OAAO,MAAMC,SAAS,GAAGF,KAAK,IAC5BA,KAAK,CAACG,MAAN,GAAe,CAAf,GAAmB,qCAAnB,GAA2DF,SADtD;AAGP,OAAO,MAAMG,SAAS,GAAGJ,KAAK,IAC5BA,KAAK,CAACG,MAAN,GAAe,EAAf,GAAoB,mBAApB,GAA0CF,SADrC;AAGP,OAAO,MAAMI,eAAe,GAAG,CAACL,KAAD,EAAQM,SAAR,KAC7BN,KAAK,KAAKM,SAAS,CAACC,QAApB,GAA+B,sBAA/B,GAAwDN,SADnD;AAGP,OAAO,MAAMO,aAAa,GAAG,MAAMC,MAAN,IAAgB;AAC3C,QAAMC,KAAK,GAAGC,EAAE,IAAI,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAjC,CAApB;;AACA,QAAMD,KAAK,CAAC,IAAD,CAAX;;AACA,MAAI,CAAC,SAAD,EAAY,MAAZ,EAAoBK,QAApB,CAA6BN,MAAM,CAACO,QAApC,CAAJ,EAAmD;AACjD,WAAOJ,OAAO,CAACK,MAAR,CAAe;AACpBD,MAAAA,QAAQ,EAAE;AADU,KAAf,CAAP;AAGD;AACF,CARM","sourcesContent":["export const required = value => (value ? undefined : \"Value is required\");\n\nexport const minLength = value =>\n  value.length < 4 ? \"Value must be at least 4 characters\" : undefined;\n\nexport const maxLength = value =>\n  value.length > 10 ? \"Value is too long\" : undefined;\n\nexport const matchesPassword = (value, allValues) =>\n  value !== allValues.password ? \"Passwords must match\" : undefined;\n\nexport const asyncValidate = async values => {\n  const sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n  await sleep(1000)\n  if ([\"daton89\", \"tony\"].includes(values.username)) {\n    return Promise.reject({\n      username: \"Username arleady taken\"\n    });\n  }\n}"]},"metadata":{},"sourceType":"module"}