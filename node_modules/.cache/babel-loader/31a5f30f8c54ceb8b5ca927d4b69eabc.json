{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/paulospiguel/NewTech/projects/Admin-ReactJS/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/paulospiguel/NewTech/projects/Admin-ReactJS/src/components/Header/index.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  background: \", \";\\n  padding: 0 10px;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component, createContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styled from 'styled-components';\nimport { IconButton } from '@material-ui/core';\nimport Badge from '@material-ui/core/Badge';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { Content, Profile } from './styles';\nconst ThemeContext = createContext('rocket');\nexport const Container = styled.div(_templateObject(), props => props.theme.theme.background);\n\nconst styles = theme => ({\n  root: {\n    color: '#fff'\n  },\n  menu: {\n    color: '#fff'\n  }\n});\n\nconst Header = () => React.createElement(Container, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, console.log(props => props.theme), React.createElement(Content, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}));\n\nexport default Header;\n/* class Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuOn: false,\n    };\n\n    // Aqui utilizamos o `bind` para que o `this` funcione dentro da nossa callback\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => ({\n      menuOn: !state.menuOn,\n    }));\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { menuOn } = this.state;\n    console.log(this.props.theme);\n    return (\n      <ThemeContext.Consumer>\n        {theme => (\n          <Container>\n            <Content>\n              <nav>\n                <IconButton\n                  color=\"inherit\"\n                  aria-label=\"Open drawer\"\n                  onClick={this.handleClick}\n                  className={classNames(classes.menuButton)}\n                >\n                  {menuOn ? (\n                    <MenuIcon className={classes.menu} />\n                  ) : (\n                    <ChevronLeftIcon className={classes.menu} />\n                  )}\n                </IconButton>\n                <div>\n                  <Link to=\"/dashboard\">DASHBOARD</Link>\n                </div>\n              </nav>\n              <aside>\n                <div>\n                  <IconButton aria-label=\"show 12 new mails\" color=\"inherit\">\n                    <Badge badgeContent={12} color=\"secondary\">\n                      <MailIcon className={classes.root} />\n                    </Badge>\n                  </IconButton>\n                  <IconButton aria-label=\"show 4 new talk\" color=\"inherit\">\n                    <Badge badgeContent={4} color=\"secondary\">\n                      <ForumIcon className={{ color: 'red' }} />\n                    </Badge>\n                  </IconButton>\n                  <IconButton\n                    aria-label=\"show 17 new notifications\"\n                    color=\"inherit\"\n                  >\n                    <Badge badgeContent={17} color=\"secondary\">\n                      <NotificationsIcon className={{}} />\n                    </Badge>\n                  </IconButton>\n                </div>\n                <Profile>\n                  <div>\n                    <strong>Paulo Spiguel</strong>\n                    <Link to=\"/profile\">Meu Perfil</Link>\n                  </div>\n                  <img\n                    src=\"https://api.adorable.io/avatars/50/abott@adorable.pngCopy to Clipboard\n  \"\n                    alt=\"Imagem Perfil\"\n                  />\n                </Profile>\n              </aside>\n            </Content>\n          </Container>\n        )}\n      </ThemeContext.Consumer>\n    );\n  }\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(Header); */","map":{"version":3,"sources":["/home/paulospiguel/NewTech/projects/Admin-ReactJS/src/components/Header/index.js"],"names":["React","Component","createContext","Link","withStyles","PropTypes","classNames","styled","IconButton","Badge","MenuIcon","ForumIcon","NotificationsIcon","ChevronLeftIcon","MailIcon","Content","Profile","ThemeContext","Container","div","props","theme","background","styles","root","color","menu","Header","console","log"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,aAA3B,QAAgD,OAAhD;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,UAAjC;AAEA,MAAMC,YAAY,GAAGf,aAAa,CAAC,QAAD,CAAlC;AAEA,OAAO,MAAMgB,SAAS,GAAGX,MAAM,CAACY,GAAV,oBACNC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYA,KAAZ,CAAkBC,UADrB,CAAf;;AAKP,MAAMC,MAAM,GAAGF,KAAK,KAAK;AACvBG,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GADiB;AAIvBC,EAAAA,IAAI,EAAE;AACJD,IAAAA,KAAK,EAAE;AADH;AAJiB,CAAL,CAApB;;AASA,MAAME,MAAM,GAAG,MACb,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGC,OAAO,CAACC,GAAR,CAAYT,KAAK,IAAIA,KAAK,CAACC,KAA3B,CADH,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CADF;;AAOA,eAAeM,MAAf;AAEA","sourcesContent":["import React, { Component, createContext } from 'react';\n\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styled from 'styled-components';\n\nimport { IconButton } from '@material-ui/core';\nimport Badge from '@material-ui/core/Badge';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MailIcon from '@material-ui/icons/Mail';\n\nimport { Content, Profile } from './styles';\n\nconst ThemeContext = createContext('rocket');\n\nexport const Container = styled.div`\n  background: ${props => props.theme.theme.background};\n  padding: 0 10px;\n`;\n\nconst styles = theme => ({\n  root: {\n    color: '#fff',\n  },\n  menu: {\n    color: '#fff',\n  },\n});\n\nconst Header = () => (\n  <Container>\n    {console.log(props => props.theme)}\n    <Content />\n  </Container>\n);\n\nexport default Header;\n\n/* class Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuOn: false,\n    };\n\n    // Aqui utilizamos o `bind` para que o `this` funcione dentro da nossa callback\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => ({\n      menuOn: !state.menuOn,\n    }));\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { menuOn } = this.state;\n    console.log(this.props.theme);\n    return (\n      <ThemeContext.Consumer>\n        {theme => (\n          <Container>\n            <Content>\n              <nav>\n                <IconButton\n                  color=\"inherit\"\n                  aria-label=\"Open drawer\"\n                  onClick={this.handleClick}\n                  className={classNames(classes.menuButton)}\n                >\n                  {menuOn ? (\n                    <MenuIcon className={classes.menu} />\n                  ) : (\n                    <ChevronLeftIcon className={classes.menu} />\n                  )}\n                </IconButton>\n                <div>\n                  <Link to=\"/dashboard\">DASHBOARD</Link>\n                </div>\n              </nav>\n              <aside>\n                <div>\n                  <IconButton aria-label=\"show 12 new mails\" color=\"inherit\">\n                    <Badge badgeContent={12} color=\"secondary\">\n                      <MailIcon className={classes.root} />\n                    </Badge>\n                  </IconButton>\n                  <IconButton aria-label=\"show 4 new talk\" color=\"inherit\">\n                    <Badge badgeContent={4} color=\"secondary\">\n                      <ForumIcon className={{ color: 'red' }} />\n                    </Badge>\n                  </IconButton>\n                  <IconButton\n                    aria-label=\"show 17 new notifications\"\n                    color=\"inherit\"\n                  >\n                    <Badge badgeContent={17} color=\"secondary\">\n                      <NotificationsIcon className={{}} />\n                    </Badge>\n                  </IconButton>\n                </div>\n                <Profile>\n                  <div>\n                    <strong>Paulo Spiguel</strong>\n                    <Link to=\"/profile\">Meu Perfil</Link>\n                  </div>\n                  <img\n                    src=\"https://api.adorable.io/avatars/50/abott@adorable.pngCopy to Clipboard\n  \"\n                    alt=\"Imagem Perfil\"\n                  />\n                </Profile>\n              </aside>\n            </Content>\n          </Container>\n        )}\n      </ThemeContext.Consumer>\n    );\n  }\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(Header); */\n"]},"metadata":{},"sourceType":"module"}